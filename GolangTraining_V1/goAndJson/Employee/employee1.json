{
    "openapi": "3.0.3",
    "info": {
        "title": "Employee",
        "description": "APIs to perform management of employees",
        "version": "1.0.0"
    },
    "path":{
    "/api/employee/create":{
      "post": {
        "summary": "Create Employee ",
        "description": "Create Employee details.",
        "operationId": "createEmployeeDetails",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeDetails"
              }
            }
          }
        }
      }
    },
    "/api/employee/delete/{employeeID}":{
      "parameters": [
        {
          "in": "path",
          "name": "employeeID",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Id of the corresponding employee"
        }
      ],
      "delete": {
        "summary": "Delete Employee Data",
        "description": "Delete Employee data corresponding to the given Employee id",
        "operationId": "deleteEmployeeDetailsCorrespondingToEmployeeId"
      }
    },
    "/api/employee/update/{employeeID}":{
      "parameters": [
        {
          "in": "path",
          "name": "employeeID",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Id of the corresponding employee"
        }
      ],
      "put": {
        "summary": "Update Employee details",
        "description": "Update Employee details corresponding to the given Employee id",
        "operationId": "updateEmployeeDetailsCorrespondingToEmployeeId",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeDetails"
              }
            }
          }
        }
      }
    },
    "/api/employee/display/{employeeID}": {
        "parameters": [
          {
            "in": "path",
            "name": "employeeID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Id of the corresponding employee"
          }
        ],
        "get": {
          "summary": "Gets Employee details",
          "description": "Gets Employee detail corresponding to the given Employee id",
          "operationId": "getEmployeeDetailsCorrespondingToEmployeeId"
        }
    } 
  },
  "connectDB":{
      "required": [
        "host",
        "port",
        "user",
        "password",
        "sslmode"
      ],
      "properties": {
        "host": {
          "type": "string",
          "description": "host name"
        },
        "port": {
          "type": "string",
          "description": "port where microservice will start."
        },
        "user": {
          "type": "string",
          "description": "username of the database."
        },
        "password": {
          "type": "string",
          "description": "Password of the user."
        },
        "sslmode": {
          "type": "string",
          "description": "ssl mode enable/disable status."
        }
      },
      "example": {
        "host":"localhost",
        "post":"8080",
        "user":"postgres",
        "password":"kaivanShah",
        "sslmode": "disable"
      }
    },
  "components":{
      "schemas":{
        "CreateEmployeeDetails":{
          "required": [
            "firstname",
            "lastname",
            "employeeID",
            "email",
            "password",
            "age"
          ],
          "properties": {
            "firstname": {
              "type": "string",
              "description": "FirstName of the employee."
            },
            "lastname": {
              "type": "string",
              "description": "LastName of the employee."
            },
            "employeeID": {
              "type": "string",
              "description": "Employee ID of the employee."
            },
            "email": {
              "type": "string",
              "description": "Email ID of the employee."
            },
            "password": {
              "type": "string",
              "description": "Password of the employee."
            },
            "age": {
              "type": "int",
              "description": "Age of the Employee"
            }
          },
          "example": {
            "firstname":"Kaivan",
            "lastname":"Shah",
            "employeeID":"123",
            "email": "Kaivan123@gmail.com",
            "password":"kaivanShah",
            "age": "39"
          }
        },
        "UpdateEmployeeDetails":{
          "required": [
            "email",
            "age"
          ],
          "properties": {
            "email": {
              "type": "string",
              "description": "Email ID of the employee. Minimum and maximum character allowed is 5 and 30 respectively"
            },
            "age": {
              "type": "int",
              "description": "Age of the Employee"
            }
          },
          "example": {
            "email": "Kaivan123@gmail.com",
            "age": "32"
          }
        }
      }
    }
}