
func checkIfVertical(b [][]*cell.Cell, XcordinateRandom, YcordinateRandom, rowSize, shipSize int) (int, int, bool) {

	var icell *cell.Cell

	icell = b[XcordinateRandom][YcordinateRandom]
	if icell.GetMark()==cell.BattleShip{
		return -1, -1, false
	}

	var (
		upMin, downMax int = XcordinateRandom, XcordinateRandom
	)

	for upMin >= 0 {
		icell = b[upMin][YcordinateRandom]
		if icell.GetMark() == cell.BattleShip {
			break
		}
		upMin--
	}
	upMin++

	for downMax < rowSize {
		icell = b[downMax][YcordinateRandom]
		if icell.GetMark() == cell.BattleShip {
			break
		}
		downMax++
	}
	downMax--

	if downMax-upMin+1 >= shipSize {
		return upMin, upMin + shipSize, true
	}

	return -1, -1, false
}

func checkIfHorizontal(b [][]*cell.Cell, XcordinateRandom, YcordinateRandom, colSize, shipSize int) (int, int, bool) {
	
	var icell *cell.Cell

	icell = b[XcordinateRandom][YcordinateRandom]
	if icell.GetMark()==cell.BattleShip{
		return -1, -1, false
	}

	var (
		leftMin, rightMax int = YcordinateRandom, YcordinateRandom
	)
	for leftMin >= 0 {
		icell = b[XcordinateRandom][leftMin]
		if icell.GetMark() == cell.BattleShip {
			break
		}
		leftMin--
	}
	leftMin++

	for rightMax < colSize {
		icell = b[XcordinateRandom][rightMax]
		if icell.GetMark() == cell.BattleShip {
			break
		}
		rightMax++
	}
	rightMax--

	if rightMax-leftMin+1 >= shipSize {
		return leftMin, leftMin + shipSize, true
	} 

	return -1, -1, false	
}







func (b *Board) Display() {
	var i, j uint8
	for i = 0; i < b.RowSize; i++ {
		for j = 0; j < b.ColSize; j++ {
			icell := b.NCells[i][j]           //get a structure pointer of the cell at a particular index
			fmt.Print(" | ", icell.GetMark()) //get the mark of the cell at that index
		}
		fmt.Printf(" |\n")
	}
}





/*
5 4 3 2 1 means ki 15cells toh we want 
3*5 =15 me we can place 5 ships of size 5 4 3 2 1
but 4*4 =16 me we cannot place bcoz either rowSize or ColSize should atleast be 5 
so that we can accomodate a ship with 5 size 


use bufio
	var minCol uint8 = 15/uint8(rowSize)
	if rowSize<5 && minCol<5{
		
		but 4*4 =16 which is greater than 15 but we cannot place 
		bcoz either rowSize or ColSize should atleast be 5 
		so that we can accomodate a ship with 5 size 

		minCol = 5
	}
	if minCol>colSize{
		fmt.Println("You should have a minimum of ",minCol," to place 5 ships of size 5,4,3,2 and 1")
		goto begin2

	}

*/
